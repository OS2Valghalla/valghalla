<?php

/**
 * @file
 * This file install the Valhalla profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function valhalla_install() {
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );

  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Disable user registration.
  variable_set('user_register', FALSE);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));

  // Create a default roles for site, with all available permissions assigned.
  $roles = array(
    'administrator',
    'Partisekretær',
    'Valgsekretær',
  );
  foreach ($roles as $role) {
    $admin_role = new stdClass();
    $admin_role->name = $role;
    $admin_role->weight = 2;
    user_role_save($admin_role);
    if ($role == 'administrator') {
      user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
    }
  }

  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  theme_enable(array('site'));
  theme_disable(array('bartik', 'rubik'));

  // Set admin theme to Rubik.
  variable_set('admin_theme', 'seven');

  // Set admin theme on node/edit and node/add.
  module_disable(array('update'));
  // Set default TZ.
  variable_set('date_default_timezone', "Europe/Berlin");
  variable_set('date_first_day', "1");
  variable_set('configurable_timezones', "0");

  // Programmatically enable ckeditor module, since enabling through
  // dependencies doesn't work.
  module_enable(array('ckeditor'));

  // Create election types.
  $terms = array(
    'EU parlamentsvalg',
    'Folketingsvalg',
    'Kommunalvalg',
    'Regionsvalg',
  );

  $taxonomy = taxonomy_vocabulary_machine_name_load('valgtype');
  $vid = $taxonomy->vid;

  foreach ($terms as $term) {
    $edit = new stdClass();
    $edit->name = $term;
    $edit->vid = $vid;
    taxonomy_term_save($edit);
  };
}
