<?php
/**
 * Implements hook_menu()
 */
function valghalla_signup_list_menu(){
  $items = array();

  $items['valghalla_lists/external_signup'] = array(
    'title' => 'Eksterne tilmeldinger',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('valghalla_signup_list_page'),
    'access arguments' => array('valghalla view external signup list'),
  );

  return $items;

}

/**
 * Implements hook_permission()
 */
function valghalla_signup_list_permission(){
  return array(
    'valghalla view external signup list' => array(
      'title'=> t('Se "Eksterne tilmeldinger" liste'),
    ),
 );
}

/**
 * Page callback for valghalla signup list
 */
function valghalla_signup_list_page($form, &$form_state) {
  $volunteer_nids = valghalla_signup_list_get_volunteer_nids($form_state['values']);
  $rows =  valghalla_signup_list_volunteers_rows($volunteer_nids);

  $header = array('Navn', 'CPR Nummer', 'E-mail', 'Tilmeldingdato', 'Valideret', t('Edit') );
  $form['#attributes'] = array('class' => 'form-inline');

  $form['name'] = array(
    '#type' => 'textfield',
    '#size' => 32,
    '#title' => t('Name'),
  );

  $form['cpr'] = array(
    '#type' => 'textfield',
    '#size' => 10,
    '#title' => t('CPR nummer'),
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#size' => 32,
    '#title' => t('Email'),
  );

  $form['validated'] = array(
    '#type' => 'select',
    '#title' => t('Valideret'),
    '#options' => array(
      'no' => 'Ikke valideret',
      'yes' => 'Valideret',
      'all' => 'Alle',
    ),
    '#default_value' => 'all',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'UdfÃ¸r',
    '#prefix' => '<div class="form-reset form-item form-group">',
    '#suffix' => '</div>',
  );

  $form['results'] = array(
    '#theme' => 'table',
    '#rows' => $rows,
    '#header' => $header,
    '#empty' => 'Listen er tom',
  );
  return $form;
}

function valghalla_signup_list_get_volunteer_nids($params) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'volunteers')
        ->fieldCondition('field_external_signup', 'value', 1);

  if ($params['validated'] == 'yes') {
    $query->fieldCondition('field_cpr_valid_date', 'value', 'NULL', '!=');
  }

  if ($params['validated'] == 'no') {
    $not_query = new EntityFieldQuery();
    $not_query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'volunteers')
        ->fieldCondition('field_external_signup', 'value', 1)
        ->fieldCondition('field_cpr_valid_date', 'value', 'NULL', '!=');
    $not_result = $not_query->execute();

    if (isset($not_result['node'])) {
      $query->entityCondition('entity_id', array_keys($not_result['node']), 'NOT IN');
    }
  }

  if ($params['name']) {
    $query->propertyCondition('title', '%' . $params['name'] . '%', 'LIKE');
  }

  if ($params['cpr']) {
    $query->fieldCondition('field_cpr_number', 'value', '%' . $params['cpr'] . '%', 'LIKE');
  }

  if ($params['email']) {
    $query->fieldCondition('field_email', 'email', '%' . $params['email'] . '%', 'LIKE');
  }

  $result = $query->execute();

  $volunteer_nids = array();
  if (isset($result['node'])) {
    $volunteer_nids = array_keys($result['node']);
  }

  return $volunteer_nids;
}

function valghalla_signup_list_volunteers_rows($volunteer_nids) {
  $rows = array();

  foreach (node_load_multiple($volunteer_nids) as $volunteer_node) {
    $cpr_field = field_get_items('node', $volunteer_node, 'field_cpr_number');
    $cpr = $cpr_field ? $cpr_field[0]['value'] : '';

    $cpr_valid_date_field = field_get_items('node', $volunteer_node, 'field_cpr_valid_date');
    $cpr_valid_date = $cpr_valid_date_field ? strtotime($cpr_valid_date_field[0]['value']) : '';

    $email_field = field_get_items('node', $volunteer_node, 'field_email');
    $email = $email_field ? $email_field[0]['email'] : '';

    $rows[] = array(
      l($volunteer_node->title, 'node/' . $volunteer_node->nid),
      $cpr,
      $email,
      format_date($volunteer_node->created, 'custom', 'd.m.y'),
      format_date($cpr_valid_date, 'custom', 'd.m.y'),
      l(t('edit'), 'node/' . $volunteer_node->nid . '/edit', array('query' => array('destination' => current_path()))),
    );
  }

  return $rows;
}

function valghalla_signup_list_page_submit(&$form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}
