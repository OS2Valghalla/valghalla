<?php

/**
 * @file
 * Valghalla_resource_export_service.module.
 */

/**
 * Implements hook_services_resources().
 */
function valghalla_resource_export_service_services_resources() {
  // Include our resources.
  require_once "resources/valghalla_resource_export.inc";

  // Add the resources.
  $resources = array();
  $resources += _valghalla_resource_export_resource_definition();
  return $resources;
}

/**
 * Determine whether the current user can access a node resource.
 *
 * @param string $op
 *   One of view, update, create, delete per node_access().
 * @param mixed $args
 *   Resource arguments passed through from the original request.
 *
 * @return bool
 *   TRUE or FALSE.
 *
 * @see node_access()
 */
function valghalla_resource_export_service_resource_access($op = 'view', $args = array()) {
  $node = NULL;

  if (empty($args[0])) {
    return services_error(t('Must provide a uuid.'), 404);
  }
  elseif (is_array($args[0]) || is_object($args[0])) {
    $node = (object) $args[0];
  }
  elseif (in_array(gettype($args[0]), array('string', 'integer'))) {
    $node = valghalla_resource_export_service_resource_load($args[0]);
  }

  if ($node) {
    // Return the node resource access.
    module_load_include('inc', 'services', 'resources/node_resource');

    if (strcasecmp($op, 'create') === 0) {
      module_load_include('inc', 'services', 'resources/node_resource');
      module_load_include('inc', 'node_export', 'formats/serialize');

      // Getting the node and type.
      $node = reset(node_export_serialize_import($node->node_export_data));
    }

    return _node_resource_access($op, array($node));
  }
  // TODO: add code for taxonomy.
  else {
    // Return a 404.
    return services_error(t('Resource with @uuid could not be found', array('@uuid' => $args[0])), 404);
  }
}

/**
 * Returns a single node resource as exported node with serialize format.
 *
 * @param mixed $entity
 *   UUID or the whole object of the media we want to return.
 *
 * @return string
 *   Serialized node object or empty array.
 *
 * @see node_export()
 */
function valghalla_resource_export_service_node_get_serialized($entity) {
  $resource = array();
  if (gettype($entity) === 'string') {
    $entity = valghalla_resource_export_service_resource_load($entity);
  }
  if ($entity) {
    // Exporting with serialize formatter.
    $export = node_export(intval($entity->nid), 'serialize');

    if (!empty($export['output'])) {
      $resource = $export['output'];
    }
  }

  // Return the resource.
  return $resource;
}

/**
 * Load a resource provided its uuid.  Much like node_load, but with uuid's...
 *
 * @param mixed $uuid
 *   Uuid of the resource.
 *
 * @return mixed
 *   Loaded node or NULL if nothing is found.
 */
function valghalla_resource_export_service_resource_load($uuid, $reset = FALSE) {
  $nodes = &drupal_static(__FUNCTION__);
  if ($reset || empty($nodes[$uuid])) {
    $entity = entity_uuid_load('node', array($uuid), array(), $reset);
    $nodes[$uuid] = reset($entity);
  }
  return empty($nodes[$uuid]) ? NULL : $nodes[$uuid];
}
