<?php
/**
 * @file
 * Contains install function for Valghalla notifications module
 */

/**
 * Implements hook_install().
 */
function valghalla_notifications_install() {
  // Copy values from email notification.
  $election_nodes = node_load_multiple(array(), array('type' => 'election'));
  $role_nodes = node_load_multiple(array(), array('type' => 'roles'));
  $types = valghalla_notifications_get_types();

  if (empty($election_nodes) || empty($role_nodes)) {
    return;
  }

  foreach ($election_nodes as $election) {
    foreach ($types as $type => $type_title) {
      $tpl_nid = variable_get('valghalla_mail_' . $election->nid . '_' . $type, FALSE);
      if (!empty($tpl_nid)) {
        if ($tpl_nid == 1) {
          $tpl_nid = '-1';
        }
        variable_set('valghalla_notifications_' . $election->nid . '_' . $type . '_mail', $tpl_nid);
        variable_set('valghalla_notifications_' . $election->nid . '_' . $type . '_gateway_id', 'mail');
        // Cleanup old variable.
        variable_del('valghalla_mail_' . $election->nid . '_' . $type);
      }
    }

    foreach ($role_nodes as $role_node) {
      foreach ($types as $type => $type_title) {
        $tpl_nid = variable_get('valghalla_mail_' . $election->nid . '_' . $role_node->nid . '_' . $type, 0);
        if (!empty($tpl_nid)) {
          if ($tpl_nid == 1) {
            $tpl_nid = '-1';
          }
          variable_set('valghalla_notifications_' . $election->nid . '_' . $role_node->nid . '_' . $type . '_mail', $tpl_nid);
          variable_set('valghalla_notifications_' . $election->nid . '_' . $role_node->nid . '_' . $type . '_gateway_id', 'mail');
          // Cleanup old variable.
          variable_del('valghalla_mail_' . $election->nid . '_' . $role_node->nid . '_' . $type);
        }
      }
    }
  }

  $roles = db_query("SELECT name, rid FROM {role} WHERE rid > 2");
  foreach ($roles as $role) {
    if ($role->name == 'ValgsekretÃ¦r') {
      continue;
    }

    $cancellation_from_participants_by_role = variable_get('valghalla_mail_cancellation_from_participants_' . $role->rid);
    if (!empty($cancellation_from_participants_by_role)) {
      variable_set('valghalla_notifications_cancellation_from_participants_' . $role->rid, $cancellation_from_participants_by_role);
      // Cleanup old variable.
      variable_del('valghalla_mail_cancellation_from_participants_' . $role->rid);
    }
  }

  $mail_variables = array(
    'cancellation_from_participants_',
    'cancellation_from_participants_mail_rsvp_never',
    'cancellation_from_participants_mail_rsvp_no',
    'cancellation_from_participants_others',
    'cancellation_from_participants_to_mails',
    'invitation',
    'last_run',
    'send_invitation_on_add',
  );
  foreach ($mail_variables as $var_suff) {
    $var_value = variable_get('valghalla_mail_' . $var_suff);
    if (!empty($var_value)) {
      variable_set('valghalla_notifications_' . $var_suff, $var_value);
      // Cleanup old variable.
      variable_del('valghalla_mail_' . $var_suff);
    }
  }
}
