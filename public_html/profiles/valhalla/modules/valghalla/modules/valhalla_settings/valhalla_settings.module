<?php
/*
 * @author Juulia Devadze <juulia@bellcom.ee>
 * @copyright Bellcom Open Source aps.
 */

function valhalla_settings_menu() {
  $items['admin/valghalla/settings'] = array(
    'title' => t('Settings'),
    'description' => t('General valghalla settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('valhalla_admin_settings_form'),
    'access arguments' => array('administer valghalla'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -3,
  );
  return $items;
}

function valhalla_admin_settings_form($form, &$form_state) {
  $form['valhalla_settings_polling_station_lock'] = array(
    '#type' => 'checkbox',
    '#title' => t('Lås valgsteds opsætningen'),
    '#default_value' => variable_get('valhalla_settings_polling_station_lock', FALSE),
  );

  //
  // Let the admin select who should see the address fields on the edit form.
  $form['valhalla_settings_hide_address_fields'] = array(
    '#type' => 'radios',
    '#title' => t('Skjul adresse felter på deltager redigeringsformular.'),
    '#options' => array(
      0 => t('Vis for alle'),
      1 => t('Skjul for alle'),
      2 => t('Vis kun for administrator (roller med tilladelsen "Administerer valghalla")'),
    ),
    '#default_value' => variable_get('valhalla_settings_hide_address_fields', 0),
  );
  
  // Municipality. You can add people only from this commune
  $form['valhalla_settings_municipality'] = array(
    '#type' => 'select',
    '#title' => 'Municipality',
    '#options' => array(
      580 => 'Aabenraa',
      851 => 'Aalborg',
      751 => 'Aarhus',
      492 => 'Ærø',
      165 => 'Albertslund',
      201 => 'Allerød',
      420 => 'Assens',
      151 => 'Ballerup',
      530 => 'Billund',
      400 => 'Bornholm',
      153 => 'Brøndby',
      810 => 'Brønderslev',
      155 => 'Dragør',
      240 => 'Egedal',
      561 => 'Esbjerg',
      430 => 'Faaborg-Midtfyn',
      563 => 'Fanø',
      710 => 'Favrskov',
      320 => 'Faxe',
      210 => 'Fredensborg',
      607 => 'Fredericia',
      147 => 'Frederiksberg',
      813 => 'Frederikshavn',
      250 => 'Frederikssund',
      190 => 'Furesø',
      157 => 'Gentofte',
      159 => 'Gladsaxe',
      161 => 'Glostrup',
      253 => 'Greve',
      270 => 'Gribskov',
      376 => 'Guldborgsund',
      510 => 'Haderslev',
      260 => 'Halsnæs',
      766 => 'Hedensted',
      217 => 'Helsingør',
      163 => 'Herlev',
      657 => 'Herning',
      219 => 'Hillerød',
      860 => 'Hjørring',
      169 => 'Høje-Taastrup',
      316 => 'Holbæk',
      661 => 'Holstebro',
      615 => 'Horsens',
      223 => 'Hørsholm',
      167 => 'Hvidovre',
      756 => 'Ikast-Brande',
      183 => 'Ishøj',
      849 => 'Jammerbugt',
      326 => 'Kalundborg',
      440 => 'Kerteminde',
      101 => 'København',
      259 => 'Køge',
      621 => 'Kolding',
      825 => 'Læsø',
      482 => 'Langeland',
      350 => 'Lejre',
      665 => 'Lemvig',
      360 => 'Lolland',
      173 => 'Lyngby-Taarbæk',
      846 => 'Mariagerfjord',
      410 => 'Middelfart',
      773 => 'Morsø',
      370 => 'Næstved',
      707 => 'Norddjurs',
      480 => 'Nordfyns',
      450 => 'Nyborg',
      727 => 'Odder',
      461 => 'Odense',
      306 => 'Odsherred',
      730 => 'Randers',
      840 => 'Rebild',
      760 => 'Ringkøbing-Skjern',
      329 => 'Ringsted',
      175 => 'Rødovre',
      265 => 'Roskilde',
      230 => 'Rudersdal',
      741 => 'Samsø',
      740 => 'Silkeborg',
      746 => 'Skanderborg',
      779 => 'Skive',
      330 => 'Slagelse',
      269 => 'Solrød',
      540 => 'Sønderborg',
      340 => 'Sorø',
      336 => 'Stevns',
      671 => 'Struer',
      479 => 'Svendborg',
      706 => 'Syddjurs',
      185 => 'Tårnby',
      787 => 'Thisted',
      550 => 'Tønder',
      187 => 'Vallensbæk',
      573 => 'Varde',
      575 => 'Vejen',
      630 => 'Vejle',
      820 => 'Vesthimmerlands',
      791 => 'Viborg',
      390 => 'Vordingborg'
    ),
    '#default_value' => variable_get('valhalla_settings_municipality', 0),
  );

  // Chose which role is the 'Partisekretær'
  $form['valhalla_settings_party_secretary_role_id'] = array(
    '#title' => t('Vælg hvilken rolle, som er "Partisekretær"'),
    '#type' => 'select',
    '#options' => user_roles(TRUE),
    '#default_value' => variable_get('valhalla_settings_party_secretary_role_id'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_form_alter().
 */
function valhalla_settings_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'user_profile_form'){

    $form['field_polling_station']['#disabled'] = TRUE;

    if (user_access('administer valghalla')) {
      $form['field_polling_station']['#disabled'] = FALSE;
    }
  }

  if (variable_get('valhalla_settings_polling_station_lock', FALSE)) {
    _valhalla_settings_lock_field($form, $form_state);
  }

  // Hide the address fields for on the volunteer according to settings.
  if ($form_id == 'volunteers_node_form') {
    $fields = array(
      'field_address_road',
      'field_address_road_no',
      'field_address_floor',
      'field_address_door',
      'field_address_zipcode',
      'field_address_city',
      'field_address_coname',
    );

    $user_access = user_access('administer valghalla');
    $hide_address_field = variable_get('valhalla_settings_hide_address_fields', 0);

    switch ($hide_address_field) {
      case 0:
        $show_fields = TRUE;
        break;

      case 1:
        $show_fields = FALSE;
        break;

      case 2:
        $show_fields = TRUE;
        if (!$user_access) {
          $show_fields = FALSE;
        }
        break;
    }

    if (!$show_fields) {
      foreach ($fields as $field) {
        $form[$field]['#access'] = FALSE;
      }
    }
  }
}

function _valhalla_settings_lock_field(&$form, &$form_state) {
  $locked_fields = array('field_venue_teams', 'field_venue_team_members');
  foreach ($locked_fields as $field) {
    $lang = $form[$field]['#language'];
    $form[$field][$lang][0]['value']['#disabled'] = TRUE;
  }

  if ($form['#form_id'] === 'field_collection_item_form' && $form['#bundle'] === 'field_volunteers_pr_pol_st_party') {
    $roles = odin_get_roles();

    foreach ($roles as $role_id => $role) {
      $form["field_role_n" . $role_id]['#disabled'] = TRUE;
      $form["field_role_n" . $role_id]['#disabled'] = TRUE;
    }
  }
}
